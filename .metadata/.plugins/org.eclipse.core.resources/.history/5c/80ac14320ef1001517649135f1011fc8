package com.miss_click.remove_the_kebab.entities;

import java.awt.Graphics2D;
import java.util.ArrayList;

import com.miss_click.remove_the_kebab.graphics.Sprite;
import com.miss_click.remove_the_kebab.util.Vector2f;
import com.miss_click.remove_the_kebab.util.Vector2i;

public abstract class Entity {

	public static final boolean PR_RIGHT = true;
	public static final boolean PR_LEFT = false;
	
	// properties
	protected EntityType type;
	protected int id;
	protected boolean dead = false;
	protected Vector2f pos;
	protected float speed;
	protected Vector2i size;
	protected int life;
	protected int damage;
	
	// attack props
	protected long fireRate;
	protected long attackTimer = System.nanoTime();
	protected ArrayList<Projectile> projectiles = new ArrayList<Projectile>();
	protected boolean projectileDir;
	private boolean shooting = false;
	
	// graphics
	protected Sprite sprite; // temporarily
	
	public void setID(int id){
		this.id = id;
	}
	
	public int getID(){
		return id;
	}
	
	public boolean isDead(){
		return dead;
	}
	
	protected void checkLife(){
		if(life <= 0){
			die();
			dead = true;
		}
	}
	
	protected void updateProjectiles(){
		for(int i=0; i < projectiles.size(); i++){
			projectiles.get(i).update();
			if(projectiles.get(i).dead)
				projectiles.remove(i);
		}
	}
	
	protected void renderProjectiles(Graphics2D g){
		for(int i=0; i < projectiles.size(); i++){
			projectiles.get(i).render(g);
		}
	}
	
	protected void shoot(){
			if(System.nanoTime() - attackTimer >= fireRate){
				attackTimer = System.nanoTime();
				if(projectileDir)
					projectiles.add(new Projectile(damage, (int)pos.x + size.x, (int)pos.y + size.y / 2, true, id));
				else
					projectiles.add(new Projectile(damage, (int)pos.x, (int)pos.y + size.y / 2, false, id));
			}
	}
	
	public void hit(int dmg){
		life -= damage;
		pos.x += 0.3;
	}

	// abstract methods
	public abstract void update();
	public abstract void render(Graphics2D g);
	public abstract void die();
	public abstract void kill(EntityType type);
	
	// getters
	public Vector2i getSize(){
		return size;
	}
	
	public Vector2f getPos(){
		return pos;
	}
	
	public EntityType getType(){
		return type;
	}
}
